<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="3" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="19261" started-at="2019-06-21T11:51:09Z" finished-at="2019-06-21T11:51:29Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="19261" started-at="2019-06-21T11:51:09Z" finished-at="2019-06-21T11:51:29Z">
      <class name="com.bsc.qa.facets.afa.test.AfaInvoiceReportValidationTest">
        <test-method status="PASS" signature="getConnection(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.bsc.qa.facets.afa.test.AfaInvoiceReportValidationTest@173f6d9]" name="getConnection" is-config="true" duration-ms="1748" started-at="2019-06-21T11:51:08Z" finished-at="2019-06-21T11:51:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[MzE1Ml81MDMyOTEwMjEwZXJpaGFteXNjcnVjaWFsMDEyMzI1MjA=]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[MzE2Ml81MDMyOTEwMjgxMDJAcmVwb2xldmVEdHJhZmZpYzAxMjMyNjQ4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[jdbc:oracle:thin:@UORC398N.DEV.BSCAL.LOCAL:12521:FACN51A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getConnection -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.bsc.qa.facets.afa.test.AfaInvoiceReportValidationTest@173f6d9]" name="beforeTest" is-config="true" duration-ms="19220" started-at="2019-06-21T11:51:09Z" finished-at="2019-06-21T11:51:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="testClaimsActivitySummaryData(java.lang.String, java.util.Hashtable, java.util.Hashtable)[pri:0, instance:com.bsc.qa.facets.afa.test.AfaInvoiceReportValidationTest@173f6d9]" name="testClaimsActivitySummaryData" duration-ms="9" started-at="2019-06-21T11:51:29Z" data-provider="provideClaimsActivitySummaryData" finished-at="2019-06-21T11:51:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[191550000307]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{191550000307=[ClaimsActivitySummary [claimPaymentPeriod=06/01/2019-06/03/2019, invoiceDate=06/04/2019, groupName=MULTIPLE CLAIM DATA(M/P/D/M-CCF), groupBillingId=AFAPDRMED012, claimsCycle=06/01/2019-06/03/2019, billDueDate=06/05/2019, invoiceNo=191550000307, billingCategory=INV14, medical=$380, costContainment=$0, interest=$0, dental=$0, pharmacy=$0, blueCardAccessFees=$0, stopLossAdvancedFunding=$0, healthReimbursementAccount=$0, subTotalClaimsActivity=$380, total=$2010], ClaimsActivitySummary [claimPaymentPeriod=06/01/2019-06/03/2019, invoiceDate=06/04/2019, groupName=MULTIPLE CLAIM DATA(M/P/D/M-CCF), groupBillingId=AFAPDRMED012, claimsCycle=06/01/2019-06/03/2019, billDueDate=06/05/2019, invoiceNo=191550000307, billingCategory=INV15, medical=$0, costContainment=$0, interest=$0, dental=$0, pharmacy=$850, blueCardAccessFees=$0, stopLossAdvancedFunding=$-50, healthReimbursementAccount=$0, subTotalClaimsActivity=$800, total=$2010], ClaimsActivitySummary [claimPaymentPeriod=06/01/2019-06/03/2019, invoiceDate=06/04/2019, groupName=MULTIPLE CLAIM DATA(M/P/D/M-CCF), groupBillingId=AFAPDRMED012, claimsCycle=06/01/2019-06/03/2019, billDueDate=06/05/2019, invoiceNo=191550000307, billingCategory=INV17, medical=$375, costContainment=$40, interest=$0, dental=$0, pharmacy=$0, blueCardAccessFees=$0, stopLossAdvancedFunding=$0, healthReimbursementAccount=$0, subTotalClaimsActivity=$415, total=$2010], ClaimsActivitySummary [claimPaymentPeriod=06/01/2019-06/03/2019, invoiceDate=06/04/2019, groupName=MULTIPLE CLAIM DATA(M/P/D/M-CCF), groupBillingId=AFAPDRMED012, claimsCycle=06/01/2019-06/03/2019, billDueDate=06/05/2019, invoiceNo=191550000307, billingCategory=INV71, medical=$375, costContainment=$40, interest=$0, dental=$0, pharmacy=$0, blueCardAccessFees=$0, stopLossAdvancedFunding=$0, healthReimbursementAccount=$0, subTotalClaimsActivity=$415, total=$2010]]}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{191550000307=[ClaimsActivitySummary [claimPaymentPeriod=06/01/2019-06/03/2019, invoiceDate=06/04/2019, groupName=MULTIPLE CLAIM DATA(M/P/D/M-CCF), groupBillingId=AFAPDRMED012, claimsCycle=06/01/2019-06/03/2019, billDueDate=06/05/2019, invoiceNo=191550000307, billingCategory=INV14, medical=$380, costContainment=$0, interest=$0, dental=$0, pharmacy=$0, blueCardAccessFees=$0, stopLossAdvancedFunding=$0, healthReimbursementAccount=$0, subTotalClaimsActivity=$380, total=$2840], ClaimsActivitySummary [claimPaymentPeriod=06/01/2019-06/03/2019, invoiceDate=06/04/2019, groupName=MULTIPLE CLAIM DATA(M/P/D/M-CCF), groupBillingId=AFAPDRMED012, claimsCycle=06/01/2019-06/03/2019, billDueDate=06/05/2019, invoiceNo=191550000307, billingCategory=INV15, medical=$0, costContainment=$0, interest=$0, dental=$0, pharmacy=$850, blueCardAccessFees=$0, stopLossAdvancedFunding=$-50, healthReimbursementAccount=$0, subTotalClaimsActivity=$800, total=$2840], ClaimsActivitySummary [claimPaymentPeriod=06/01/2019-06/03/2019, invoiceDate=06/04/2019, groupName=MULTIPLE CLAIM DATA(M/P/D/M-CCF), groupBillingId=AFAPDRMED012, claimsCycle=06/01/2019-06/03/2019, billDueDate=06/05/2019, invoiceNo=191550000307, billingCategory=INV17, medical=$750, costContainment=$40, interest=$0, dental=$0, pharmacy=$0, blueCardAccessFees=$0, stopLossAdvancedFunding=$0, healthReimbursementAccount=$0, subTotalClaimsActivity=$830, total=$2840], ClaimsActivitySummary [claimPaymentPeriod=06/01/2019-06/03/2019, invoiceDate=06/04/2019, groupName=MULTIPLE CLAIM DATA(M/P/D/M-CCF), groupBillingId=AFAPDRMED012, claimsCycle=06/01/2019-06/03/2019, billDueDate=06/05/2019, invoiceNo=191550000307, billingCategory=INV71, medical=$750, costContainment=$40, interest=$0, dental=$0, pharmacy=$0, blueCardAccessFees=$0, stopLossAdvancedFunding=$0, healthReimbursementAccount=$0, subTotalClaimsActivity=$830, total=$2840]]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
total Mismatch for Invoice NO:191550000307 Billing category:INV14 expected [$2840] but found [$2010],
total Mismatch for Invoice NO:191550000307 Billing category:INV15 expected [$2840] but found [$2010],
medical Mismatch for Invoice NO:191550000307 Billing category:INV17 expected [$750] but found [$375],
subTotalClaimsActivity Mismatch for Invoice NO:191550000307 Billing category:INV17 expected [$830] but found [$415],
total Mismatch for Invoice NO:191550000307 Billing category:INV17 expected [$2840] but found [$2010],
medical Mismatch for Invoice NO:191550000307 Billing category:INV71 expected [$750] but found [$375],
subTotalClaimsActivity Mismatch for Invoice NO:191550000307 Billing category:INV71 expected [$830] but found [$415],
total Mismatch for Invoice NO:191550000307 Billing category:INV71 expected [$2840] but found [$2010]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
total Mismatch for Invoice NO:191550000307 Billing category:INV14 expected [$2840] but found [$2010],
total Mismatch for Invoice NO:191550000307 Billing category:INV15 expected [$2840] but found [$2010],
medical Mismatch for Invoice NO:191550000307 Billing category:INV17 expected [$750] but found [$375],
subTotalClaimsActivity Mismatch for Invoice NO:191550000307 Billing category:INV17 expected [$830] but found [$415],
total Mismatch for Invoice NO:191550000307 Billing category:INV17 expected [$2840] but found [$2010],
medical Mismatch for Invoice NO:191550000307 Billing category:INV71 expected [$750] but found [$375],
subTotalClaimsActivity Mismatch for Invoice NO:191550000307 Billing category:INV71 expected [$830] but found [$415],
total Mismatch for Invoice NO:191550000307 Billing category:INV71 expected [$2840] but found [$2010]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
at com.bsc.qa.facets.afa.test.AfaInvoiceReportValidationTest.testClaimsActivitySummaryData(AfaInvoiceReportValidationTest.java:130)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClaimsActivitySummaryData -->
        <test-method status="PASS" signature="testFrontPageData(java.lang.String, java.util.Hashtable, java.util.Hashtable)[pri:0, instance:com.bsc.qa.facets.afa.test.AfaInvoiceReportValidationTest@173f6d9]" name="testFrontPageData" duration-ms="1" started-at="2019-06-21T11:51:29Z" data-provider="provideFrontPageData" finished-at="2019-06-21T11:51:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[191550000307]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{191550000307=FrontPage [groupName=MULTIPLE CLAIM DATA(M/P/D/M-CCF), groupAddress=123 PARK AWE  Los Angeles, CA 90056, attention=, groupBillingId=AFAPDRMED012, fundingPeriod=06/01/2019-06/03/2019, billDueDate=06/05/2019, invoiceNo=191550000307, invoiceDate=06/04/2019, currentPeriodClaims=$2050, balanceForward=$800, totalDueForClaimsReimbursement=$2850, bscAccountantName=, phone=, fax=, email=]}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{191550000307=FrontPage [groupName=MULTIPLE CLAIM DATA(M/P/D/M-CCF), groupAddress=123 PARK AWE  Los Angeles, CA 90056, attention=, groupBillingId=AFAPDRMED012, fundingPeriod=06/01/2019-06/03/2019, billDueDate=06/05/2019, invoiceNo=191550000307, invoiceDate=06/04/2019, currentPeriodClaims=$2050, balanceForward=$800, totalDueForClaimsReimbursement=$2850, bscAccountantName=, phone=, fax=, email=]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFrontPageData -->
        <test-method status="FAIL" signature="testShieldSavingData(java.lang.String, java.util.Hashtable, java.util.Hashtable)[pri:0, instance:com.bsc.qa.facets.afa.test.AfaInvoiceReportValidationTest@173f6d9]" name="testShieldSavingData" duration-ms="1" started-at="2019-06-21T11:51:29Z" data-provider="provideShieldSavingData" finished-at="2019-06-21T11:51:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[191550000307]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{191550000307=[ShieldSaving [claimPaymentPeriod=06/01/2019-06/03/2019, groupName=MULTIPLE CLAIM DATA(M/P/D/M-CCF), groupBillingId=AFAPDRMED012, claimsCycle=06/01/2019-06/03/2019, billDueDate=06/05/2019, invoiceNo=191550000307, billingCategory=INV17, providerChargedAmount=$1000, savings=$200, disallowed=$0, allowedAmount=$800, costContainment=$40, total=$840], ShieldSaving [claimPaymentPeriod=06/01/2019-06/03/2019, groupName=MULTIPLE CLAIM DATA(M/P/D/M-CCF), groupBillingId=AFAPDRMED012, claimsCycle=06/01/2019-06/03/2019, billDueDate=06/05/2019, invoiceNo=191550000307, billingCategory=INV71, providerChargedAmount=$1000, savings=$200, disallowed=$0, allowedAmount=$800, costContainment=$40, total=$840]]}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{191550000307=[ShieldSaving [claimPaymentPeriod=06/01/2019-06/03/2019, groupName=MULTIPLE CLAIM DATA(M/P/D/M-CCF), groupBillingId=AFAPDRMED012, claimsCycle=06/01/2019-06/03/2019, billDueDate=06/05/2019, invoiceNo=191550000307, billingCategory=INV17, providerChargedAmount=$2000, savings=$900, disallowed=$0, allowedAmount=$1100, costContainment=$1010, total=$2110], ShieldSaving [claimPaymentPeriod=06/01/2019-06/03/2019, groupName=MULTIPLE CLAIM DATA(M/P/D/M-CCF), groupBillingId=AFAPDRMED012, claimsCycle=06/01/2019-06/03/2019, billDueDate=06/05/2019, invoiceNo=191550000307, billingCategory=INV71, providerChargedAmount=$2000, savings=$900, disallowed=$0, allowedAmount=$1100, costContainment=$1010, total=$2110]]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
ProviderChargedAmount Mismatch for Invoice NO:191550000307 Billing category:INV17 expected [$2000] but found [$1000],
Savings Mismatch for Invoice NO:191550000307 Billing category:INV17 expected [$900] but found [$200],
AllowedAmount Mismatch for Invoice NO:191550000307 Billing category:INV17 expected [$1100] but found [$800],
CostContainment Mismatch for Invoice NO:191550000307 Billing category:INV17 expected [$1010] but found [$40],
Total Mismatch for Invoice NO:191550000307 Billing category:INV17 expected [$2110] but found [$840],
ProviderChargedAmount Mismatch for Invoice NO:191550000307 Billing category:INV71 expected [$2000] but found [$1000],
Savings Mismatch for Invoice NO:191550000307 Billing category:INV71 expected [$900] but found [$200],
AllowedAmount Mismatch for Invoice NO:191550000307 Billing category:INV71 expected [$1100] but found [$800],
CostContainment Mismatch for Invoice NO:191550000307 Billing category:INV71 expected [$1010] but found [$40],
Total Mismatch for Invoice NO:191550000307 Billing category:INV71 expected [$2110] but found [$840]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
ProviderChargedAmount Mismatch for Invoice NO:191550000307 Billing category:INV17 expected [$2000] but found [$1000],
Savings Mismatch for Invoice NO:191550000307 Billing category:INV17 expected [$900] but found [$200],
AllowedAmount Mismatch for Invoice NO:191550000307 Billing category:INV17 expected [$1100] but found [$800],
CostContainment Mismatch for Invoice NO:191550000307 Billing category:INV17 expected [$1010] but found [$40],
Total Mismatch for Invoice NO:191550000307 Billing category:INV17 expected [$2110] but found [$840],
ProviderChargedAmount Mismatch for Invoice NO:191550000307 Billing category:INV71 expected [$2000] but found [$1000],
Savings Mismatch for Invoice NO:191550000307 Billing category:INV71 expected [$900] but found [$200],
AllowedAmount Mismatch for Invoice NO:191550000307 Billing category:INV71 expected [$1100] but found [$800],
CostContainment Mismatch for Invoice NO:191550000307 Billing category:INV71 expected [$1010] but found [$40],
Total Mismatch for Invoice NO:191550000307 Billing category:INV71 expected [$2110] but found [$840]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
at com.bsc.qa.facets.afa.test.AfaInvoiceReportValidationTest.testShieldSavingData(AfaInvoiceReportValidationTest.java:159)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testShieldSavingData -->
        <test-method status="PASS" signature="closeConnection()[pri:0, instance:com.bsc.qa.facets.afa.test.AfaInvoiceReportValidationTest@173f6d9]" name="closeConnection" is-config="true" duration-ms="1" started-at="2019-06-21T11:51:29Z" finished-at="2019-06-21T11:51:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeConnection -->
      </class> <!-- com.bsc.qa.facets.afa.test.AfaInvoiceReportValidationTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
